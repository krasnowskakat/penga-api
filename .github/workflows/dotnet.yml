# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src
    - name: Build
      run: dotnet build --no-restore
      working-directory: src
    - name: Run Test With Coverage
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
      working-directory: src
    - name: Extract Coverage Percentage
      run: |
        COVERAGE_FILE=$(find . -type f -name "coverage.cobertura.xml" | head -n 1)
        echo "Coverage file: $COVERAGE_FILE"
        COVERAGE_PERCENT=$(grep -oP 'line-rate="\K[0-9.]+' "$COVERAGE_FILE" | head -n 1 | awk '{printf "%.2f", $1 * 100}')
        echo "Coverage Percentage: $COVERAGE_PERCENT%"
        echo "COVERAGE_PERCENT=$COVERAGE_PERCENT" >> $GITHUB_ENV
     - name: Post Build Comment
      if: always() # Ensures this step runs even if the build fails
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        issue-number: ${{ github.event.pull_request.number || github.run_id }}
        body: |
          **Build Status:** ${{ job.status }}
          **Coverage Percentage:** ${{ env.COVERAGE_PERCENT }}%
